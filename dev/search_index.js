var documenterSearchIndex = {"docs":
[{"location":"#SimpleTreeMeshes","page":"Home","title":"SimpleTreeMeshes","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This code is intended to provide a quick and easy way to experiment with algorithms on non-uniform \"staggered grids\". It does not provide the performance or generality of the underlying p4est library (though relying on this might allow for improvements in these directions in the future). Instead, it aims to give the user quick access to data structures to quickly define their algorithmic ideas, and plot them.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This is a research/experimental code, so one should follow the standard practical assumption about such code: if it's not in the test suite, don't believe it works!","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SimpleTreeMeshes]\nOrder   = [:function, :type]","category":"page"},{"location":"#SimpleTreeMeshes.CreateSimpleTreeMesh","page":"Home","title":"SimpleTreeMeshes.CreateSimpleTreeMesh","text":"Creates a new `SimpleTreMesh` object.\n\n`refinement_function(x, y, d, level)` should return a boolean value\nindicating if an element with corner at `(x,y)`, size `d`, and\nrefinement level `level` should be refined.\n\n\n\n\n\n","category":"function"}]
}
